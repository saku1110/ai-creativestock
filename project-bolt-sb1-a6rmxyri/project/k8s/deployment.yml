apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-creative-stock-frontend
  namespace: default
  labels:
    app: ai-creative-stock
    component: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ai-creative-stock
      component: frontend
  template:
    metadata:
      labels:
        app: ai-creative-stock
        component: frontend
    spec:
      containers:
      - name: frontend
        image: ai-creative-stock:latest
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: supabase-url
        - name: VITE_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: supabase-anon-key
        - name: VITE_STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: stripe-publishable-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: ai-creative-stock-service
  namespace: default
  labels:
    app: ai-creative-stock
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: ai-creative-stock
    component: frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-creative-stock-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - ai-creative-stock.com
    - www.ai-creative-stock.com
    secretName: ai-creative-stock-tls
  rules:
  - host: ai-creative-stock.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-creative-stock-service
            port:
              number: 80
  - host: www.ai-creative-stock.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-creative-stock-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: default
type: Opaque
stringData:
  supabase-url: "your-supabase-url"
  supabase-anon-key: "your-supabase-anon-key"
  stripe-publishable-key: "your-stripe-publishable-key"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        server {
            listen 3000;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            # セキュリティヘッダー
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # SPAのルーティング対応
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            # 静的ファイルのキャッシュ
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # ヘルスチェック
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }