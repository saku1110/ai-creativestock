version: '3.8'

services:
  # React開発サーバー
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .env
    networks:
      - ai-creative-network
    command: npm run dev -- --host 0.0.0.0

  # PostgreSQL（ローカル開発用）
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ai_creative_stock
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - ai-creative-network

  # Redis（セッション・キャッシュ用）
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-creative-network
    command: redis-server --appendonly yes

  # Nginx（リバースプロキシ）
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    networks:
      - ai-creative-network

  # Supabase CLI（開発用）
  supabase:
    image: supabase/cli:latest
    restart: "no"
    volumes:
      - .:/workspace
    working_dir: /workspace
    networks:
      - ai-creative-network
    profiles:
      - tools

  # Stripe CLI（Webhook開発用）
  stripe-cli:
    image: stripe/stripe-cli:latest
    restart: "no"
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_KEY}
    volumes:
      - .:/workspace
    working_dir: /workspace
    networks:
      - ai-creative-network
    profiles:
      - tools
    command: listen --forward-to host.docker.internal:3000/webhook

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  ai-creative-network:
    driver: bridge

# 開発用設定
x-development: &development
  restart: unless-stopped
  networks:
    - ai-creative-network